{"version":3,"sources":["theme.js","components/form-input/form-input.component.jsx","modules/ducks/auth/auth.actions.js","components/sign-in/sign-in.component.jsx","pages/sign-in/sign-in.component.jsx","pages/home-page/home-page.component.jsx","modules/ducks/auth/auth.selectors.js","app.container.jsx","App.js","modules/ducks/auth/auth.reducer.js","modules/ducks/channel/channel.actions.js","modules/ducks/channel/channel.reducer.js","modules/root.reducer.js","firebase.utils.js","modules/sagas/auth.sagas.js","modules/sagas/root.saga.js","modules/store.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","FormInput","handleChange","label","otherProps","className","onChange","value","length","createActions","googleSignIn","emailSignIn","signInSuccess","signInFailure","signOut","signOutSuccess","signOutFailure","signUp","signUpSuccess","signUpFailure","checkUserSession","purgeStore","Types","Creators","SignIn","props","handleSubmit","event","a","preventDefault","state","email","password","emailSignInAction","target","name","setState","this","isFetching","authError","Container","maxWidth","LinearProgress","Box","pt","Typography","variant","gutterBottom","role","aria-label","Alert","style","marginBottom","severity","onSubmit","type","required","Button","color","React","Component","actions","UserActionCreators","googleSignInAction","connect","auth","SignInAndSignUpPage","Channels","maxNumberChannel","selectedChannel","useState","anchorEl","setAnchorEl","handleClose","channels","ch","push","Fragment","aria-controls","aria-haspopup","onClick","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","map","channel","MenuItem","key","HomePage","setSelectedChannel","setError","useEffect","parseInt","my","textAlign","IconButton","url","controls","onError","onBuffer","console","log","backgroundColor","selectCurrentUser","createSelector","currentUser","useStyles","makeStyles","root","margin","spacing","flexGrow","menuButton","marginRight","title","mapStateToProps","createStructuredSelector","logoutAction","classes","AppBar","position","Toolbar","edge","path","component","App","handleLogout","signOutAction","checkUserSessionAction","purgeStoreAction","createReducer","EMAIL_SIGN_IN","SIGN_IN_SUCCESS","action","SIGN_OUT","SIGN_OUT_SUCCESS","SIGN_IN_FAILURE","SIGN_OUT_FAILURE","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","getHost","getHostSuccess","getHostFailure","host","GET_HOST","GET_HOST_SUCCESS","data","GET_HOST_FAILURE","persistConfig","storage","rootReducer","persistCombineReducers","authReducer","channelReducer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","exists","displayName","createdAt","Date","set","message","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","getSnapshotFromUserAuth","signInWithGoogleRequest","signInWithEmailRequest","checkUserSessionRequest","signOutRequest","signUpRequest","userSagas","call","userSnapshot","put","signInWithPopup","user","signInWithEmailAndPassword","Promise","resolve","reject","unsubscribe","onAuthStateChanged","createUserWithEmailAndPassword","takeLatest","GOOGLE_SIGN_IN","CHECK_USER_SESSION","SIGN_UP","rootSaga","all","fork","authSagas","createLogger","collapsed","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","removeItem","undefined","applyMiddleware","run","persistor","persistStore","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40e38ae2.chunk.js","sourcesContent":["import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6'\n    },\n    secondary: {\n      main: '#19857b'\n    },\n    error: {\n      main: red.A400\n    },\n    background: {\n      default: '#fff'\n    }\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './form-input.styles.scss';\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\n  <div className=\"group\">\n    <input className=\"form-input\" onChange={handleChange} {...otherProps} />\n    {label ? (\n      <label className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n        {label}\n      </label>\n    ) : null}\n  </div>\n);\n\nFormInput.propTypes = {\n  handleChange: PropTypes.func,\n  label: PropTypes.string\n};\n\nexport default FormInput;\n","import { createActions } from 'reduxsauce';\n\nconst { Types, Creators } = createActions({\n  googleSignIn: [],\n  emailSignIn: ['data'],\n  signInSuccess: ['currentUser'],\n  signInFailure: ['error'],\n  signOut: [],\n  signOutSuccess: [],\n  signOutFailure: ['error'],\n  signUp: ['data'],\n  signUpSuccess: [],\n  signUpFailure: ['error'],\n  checkUserSession: [],\n  purgeStore: [] // for development\n});\n\nexport { Types, Creators };\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Alert from '@material-ui/lab/Alert';\nimport Box from '@material-ui/core/Box';\n\nimport FormInput from 'components/form-input/form-input.component';\n\nimport { connect } from 'react-redux';\nimport { Creators as UserActionCreators } from 'modules/ducks/auth/auth.actions';\n\nimport './sign-in.styles.scss';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const { email, password } = this.state;\n    this.props.emailSignInAction({ email, password });\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { isFetching, error: authError } = this.props;\n\n    return (\n      <Container maxWidth=\"sm\">\n        {isFetching && <LinearProgress />}\n        <Box pt={2}>\n          <Typography variant=\"h3\" gutterBottom>\n            I-login mo email mo, beks.\n          </Typography>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Kung wala kang account, lumayas ka dito!{' '}\n            <span role=\"img\" aria-label=\"angry\">\n              😡\n            </span>\n          </Typography>\n        </Box>\n        {authError && (\n          <Alert style={{ marginBottom: 10 }} severity=\"error\">\n            {authError}\n          </Alert>\n        )}\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            handleChange={this.handleChange}\n            value={this.state.email}\n            label=\"email\"\n            required\n          />\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            handleChange={this.handleChange}\n            label=\"password\"\n            required\n          />\n          <div className=\"buttons\">\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              I-pasok mo!\n            </Button>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n\nSignIn.propTypes = {\n  emailSignInAction: PropTypes.func,\n  googleSignInAction: PropTypes.func\n};\n\nconst mapStateToProps = (state) => {\n  const { isFetching, error } = state.auth;\n  return { isFetching, error };\n};\n\nconst actions = {\n  emailSignInAction: UserActionCreators.emailSignIn,\n  googleSignInAction: UserActionCreators.googleSignIn\n};\n\nexport default connect(mapStateToProps, actions)(SignIn);\n","import React from 'react';\n\nimport SignIn from 'components/sign-in/sign-in.component';\n\nimport './sign-in.scss';\n\nconst SignInAndSignUpPage = () => (\n  <div className=\"sign-in-and-sign-up\">\n    <SignIn />\n  </div>\n);\n\nexport default SignInAndSignUpPage;\n","import React from 'react';\nimport Player from 'react-player';\n// import { useParams } from 'react-router-dom';\n// import { createBrowserHistory } from 'history';\n\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Alert from '@material-ui/lab/Alert';\nimport Container from '@material-ui/core/Container';\n\n// const history = createBrowserHistory();\n\nconst HomePage = () => {\n  // let { channel } = useParams();\n  let [channel, setSelectedChannel] = React.useState(1);\n  let [error, setError] = React.useState(null);\n\n  const maxNumberChannel = 99;\n\n  React.useEffect(() => {\n    // console.log({ selectedChannel });\n    if (parseInt(channel) < 1) {\n      setSelectedChannel(maxNumberChannel);\n    }\n    if (parseInt(channel) > maxNumberChannel) {\n      setSelectedChannel(1);\n    }\n    // history.push(`/${selectedChannel}`);\n  }, [channel]);\n\n  const nextChannel = () => {\n    channel = parseInt(channel) + 1;\n    setSelectedChannel(channel);\n    setError(null);\n  };\n\n  const prevChannel = () => {\n    channel = parseInt(channel) - 1;\n    setSelectedChannel(channel);\n    setError(null);\n  };\n\n  const handleError = () => {\n    setError('Failed to load the stream, please try other channels.');\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box my={2} style={{ textAlign: 'right' }}>\n        <Channels maxNumberChannel={maxNumberChannel} selectedChannel={channel} />\n        <IconButton onClick={() => prevChannel()}>\n          <NavigateBeforeIcon />\n        </IconButton>\n        <IconButton onClick={() => nextChannel()}>\n          <NavigateNextIcon />\n        </IconButton>\n      </Box>\n      <Box>\n        {error && (\n          <Alert style={{ marginBottom: 10 }} severity=\"error\">\n            {error}\n          </Alert>\n        )}\n        <Player\n          url={`http://195.181.160.220:2080/${channel}/video.m3u8`}\n          controls\n          onError={() => handleError()}\n          onBuffer={() => console.log('Buffering...')}\n          style={{ maxWidth: '100%', backgroundColor: 'black' }}\n        />\n      </Box>\n    </Container>\n  );\n};\n\n// eslint-disable-next-line react/prop-types\nconst Channels = ({ maxNumberChannel, selectedChannel }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const channels = [];\n  for (let ch = 1; ch <= maxNumberChannel; ch++) {\n    channels.push(ch);\n  }\n\n  return (\n    <React.Fragment>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        {`Channel ${selectedChannel}`}\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {channels.map((channel) => (\n          <MenuItem key={channel} onClick={handleClose}>\n            {channel}\n          </MenuItem>\n        ))}\n      </Menu>\n    </React.Fragment>\n  );\n};\n\nexport default HomePage;\n","import { createSelector } from 'reselect';\n\nconst selectAuth = (state) => state.auth;\n\nexport const selectCurrentUser = createSelector([selectAuth], ({ currentUser }) => currentUser);\n","/* eslint-disable react/prop-types */\n\nimport React from 'react';\nimport HomePage from './pages/home-page/home-page.component';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from './modules/ducks/auth/auth.selectors';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    },\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nconst AppContainer = ({ logoutAction, currentUser }) => {\n  const classes = useStyles();\n\n  const handleLogout = () => {\n    if (currentUser) logoutAction();\n    return;\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            TVeks\n          </Typography>\n          <Button onClick={() => handleLogout()} color=\"inherit\">\n            {currentUser ? 'Sign out' : 'Sign in'}\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      <Switch>\n        <Route path=\"/\" component={HomePage}  />\n      </Switch>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nexport default connect(mapStateToProps)(AppContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SignInPage from './pages/sign-in/sign-in.component';\nimport AppContainer from './app.container';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from './modules/ducks/auth/auth.selectors';\nimport { Creators } from './modules/ducks/auth/auth.actions';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.checkUserSessionAction();\n  }\n\n  handleLogout = () => {\n    // this.props.purgeStoreAction();\n    this.props.signOutAction();\n  };\n\n  render() {\n    return this.props.currentUser ? (\n      <AppContainer logoutAction={this.handleLogout} />\n    ) : (\n      <SignInPage />\n    );\n  }\n}\n\nApp.propTypes = {\n  currentUser: PropTypes.object,\n  checkUserSessionAction: PropTypes.func,\n  signOutAction: PropTypes.func,\n  purgeStoreAction: PropTypes.func\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst actions = {\n  checkUserSessionAction: Creators.checkUserSession,\n  signOutAction: Creators.signOut,\n  purgeStoreAction: Creators.purgeStore\n};\n\nexport default connect(mapStateToProps, actions)(App);\n","import { createReducer } from 'reduxsauce';\nimport { Types } from './auth.actions';\n\nconst INITIAL_STATE = {\n  currentUser: null,\n  isFetching: false,\n  error: null\n};\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.EMAIL_SIGN_IN]: (state) => {\n    return {\n      ...state,\n      isFetching: true,\n      error: null\n    };\n  },\n  [Types.SIGN_IN_SUCCESS]: (state, action) => {\n    const { currentUser } = action;\n    return {\n      ...state,\n      currentUser,\n      isFetching: false,\n      error: null\n    };\n  },\n  [Types.SIGN_OUT]: (state) => {\n    return {\n      ...state,\n      isFetching: true,\n      error: null\n    };\n  },\n  [Types.SIGN_OUT_SUCCESS]: (state) => {\n    return {\n      ...state,\n      currentUser: null,\n      isFetching: false,\n      error: null\n    };\n  },\n  [Types.SIGN_IN_FAILURE]: (state, action) => {\n    return {\n      ...state,\n      isFetching: false,\n      error: action.error\n    };\n  },\n  [Types.SIGN_OUT_FAILURE]: (state, action) => {\n    return {\n      ...state,\n      isFetching: false,\n      error: action.error\n    };\n  },\n  [Types.SIGN_UP_SUCCESS]: (state) => {\n    return {\n      ...state,\n      error: null\n    };\n  },\n  [Types.SIGN_UP_FAILURE]: (state, action) => {\n    return {\n      ...state,\n      error: action.error\n    };\n  }\n});\n","import { createActions } from 'reduxsauce';\n\nconst { Types, Creators } = createActions({\n  getHost: [],\n  getHostSuccess: ['data'],\n  getHostFailure: ['error']\n});\n\nexport { Types, Creators };\n","import { createReducer } from 'reduxsauce';\nimport { Types } from './channel.actions';\n\nconst INITIAL_STATE = {\n  host: null,\n  error: null,\n  isFetching: false\n};\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.GET_HOST]: (state) => {\n    return {\n      ...state,\n      error: null,\n      isFetching: true\n    };\n  },\n  [Types.GET_HOST_SUCCESS]: (state, action) => {\n    const { host } = action.data;\n    return {\n      ...state,\n      isFetching: false,\n      host\n    };\n  },\n  [Types.GET_HOST_FAILURE]: (state, action) => {\n    const { error } = action;\n    return {\n      ...state,\n      isFetching: false,\n      error\n    };\n  }\n});\n","import { persistCombineReducers } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport authReducer from './ducks/auth/auth.reducer';\nimport channelReducer from './ducks/channel/channel.reducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\n\nconst rootReducer = persistCombineReducers(persistConfig, {\n  auth: authReducer,\n  channel: channelReducer\n});\n\nexport default (state, action) => {\n  if (action.type === 'PURGE_STORE') {\n    console.log('store purged!');\n    storage.removeItem('persist:primary');\n    state = undefined;\n  }\n\n  return rootReducer(state, action);\n};\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: 'AIzaSyCpo_Cnun5J1tzu7WEWDi-41644e7s5WeM',\n  authDomain: 'tveks-7bd0d.firebaseapp.com',\n  databaseURL: 'https://tveks-7bd0d.firebaseio.com',\n  projectId: 'tveks-7bd0d',\n  storageBucket: 'tveks-7bd0d.appspot.com',\n  messagingSenderId: '688558364783',\n  appId: '1:688558364783:web:b427b4a5ea9e3c5830959a'\n};\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach((obj) => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n\n  return await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n  const transformedCollection = collections.docs.map((doc) => {\n    const { title, items } = doc.data();\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n","import { takeLatest, put, call } from 'redux-saga/effects';\nimport { Types, Creators } from '../ducks/auth/auth.actions';\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser\n} from '../../firebase.utils';\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(Creators.signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(Creators.signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogleRequest() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(Creators.signInFailure(error.message));\n  }\n}\n\nexport function* signInWithEmailRequest(action) {\n  const { email, password } = action.data;\n  console.log('user', email);\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    console.log('user', user);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(Creators.signInFailure(error.message));\n  }\n}\n\nexport function* checkUserSessionRequest() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(Creators.signInFailure(error));\n  }\n}\n\nexport function* signOutRequest() {\n  try {\n    yield auth.signOut();\n    yield put(Creators.signOutSuccess());\n  } catch (error) {\n    yield put(Creators.signOutFailure(error));\n  }\n}\n\nexport function* signUpRequest(action) {\n  try {\n    const { displayName, email, password } = action.data;\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user, { displayName });\n    yield put(Creators.signUpSuccess());\n  } catch (error) {\n    yield put(Creators.signUpFailure(error.message));\n  }\n}\n\nexport default function* userSagas() {\n  yield takeLatest(Types.GOOGLE_SIGN_IN, signInWithGoogleRequest);\n  yield takeLatest(Types.EMAIL_SIGN_IN, signInWithEmailRequest);\n  yield takeLatest(Types.CHECK_USER_SESSION, checkUserSessionRequest);\n  yield takeLatest(Types.SIGN_OUT, signOutRequest);\n  yield takeLatest(Types.SIGN_UP, signUpRequest);\n}\n","import { all, fork } from 'redux-saga/effects';\nimport authSagas from './auth.sagas';\n\nexport default function* rootSaga() {\n  yield all([fork(authSagas)]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './root.reducer';\n\nimport rootSaga from './sagas/root.saga';\n\nconst logger = createLogger({ collapsed: true });\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware]; // makes middlewares scalable\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\n// export default createStore(rootReducer, applyMiddleware(logger)); // for only one middleware\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n","import 'fontsource-roboto';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport App from './App';\n\nimport { store, persistor } from './modules/store';\n\nconst Component = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <PersistGate persistor={persistor}>\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <App />\n          </ThemeProvider>\n        </PersistGate>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\n// eslint-disable-next-line no-undef\nReactDOM.render(<Component />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}