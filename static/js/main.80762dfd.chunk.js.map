{"version":3,"sources":["theme.js","components/form-input/form-input.component.jsx","modules/ducks/auth/auth.actions.js","components/sign-in/sign-in.component.jsx","pages/sign-in/sign-in.component.jsx","pages/home-page/home-page.component.jsx","modules/ducks/auth/auth.selectors.js","app.container.jsx","App.js","modules/ducks/auth/auth.reducer.js","modules/ducks/channel/channel.actions.js","modules/ducks/channel/channel.reducer.js","modules/root.reducer.js","firebase.utils.js","modules/sagas/auth.sagas.js","modules/sagas/root.saga.js","modules/store.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","FormInput","handleChange","label","otherProps","className","onChange","value","length","createActions","googleSignIn","emailSignIn","signInSuccess","signInFailure","signOut","signOutSuccess","signOutFailure","signUp","signUpSuccess","signUpFailure","checkUserSession","purgeStore","Types","Creators","SignIn","props","handleSubmit","event","a","preventDefault","state","email","password","emailSignInAction","target","name","setState","this","isFetching","authError","Container","maxWidth","LinearProgress","Box","pt","Typography","variant","gutterBottom","Alert","style","marginBottom","severity","onSubmit","type","required","Button","color","React","Component","actions","UserActionCreators","googleSignInAction","connect","auth","SignInAndSignUpPage","history","createBrowserHistory","Channels","maxNumberChannel","selectedChannel","useState","anchorEl","setAnchorEl","handleClose","channels","ch","push","Fragment","aria-controls","aria-haspopup","onClick","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","map","channel","MenuItem","key","HomePage","useParams","setSelectedChannel","setError","useEffect","console","log","parseInt","my","textAlign","IconButton","url","controls","onError","onBuffer","backgroundColor","selectCurrentUser","createSelector","currentUser","useStyles","makeStyles","root","margin","spacing","flexGrow","menuButton","marginRight","title","mapStateToProps","createStructuredSelector","logoutAction","classes","AppBar","position","Toolbar","edge","aria-label","path","component","App","handleLogout","signOutAction","checkUserSessionAction","purgeStoreAction","createReducer","EMAIL_SIGN_IN","SIGN_IN_SUCCESS","action","SIGN_OUT","SIGN_OUT_SUCCESS","SIGN_IN_FAILURE","SIGN_OUT_FAILURE","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","getHost","getHostSuccess","getHostFailure","host","GET_HOST","GET_HOST_SUCCESS","data","GET_HOST_FAILURE","persistConfig","storage","rootReducer","persistCombineReducers","authReducer","channelReducer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","exists","displayName","createdAt","Date","set","message","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","getSnapshotFromUserAuth","signInWithGoogleRequest","signInWithEmailRequest","checkUserSessionRequest","signOutRequest","signUpRequest","userSagas","call","userSnapshot","put","signInWithPopup","user","signInWithEmailAndPassword","Promise","resolve","reject","unsubscribe","onAuthStateChanged","createUserWithEmailAndPassword","takeLatest","GOOGLE_SIGN_IN","CHECK_USER_SESSION","SIGN_UP","rootSaga","all","fork","authSagas","createLogger","collapsed","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","removeItem","undefined","applyMiddleware","run","persistor","persistStore","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80762dfd.chunk.js","sourcesContent":["import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6'\n    },\n    secondary: {\n      main: '#19857b'\n    },\n    error: {\n      main: red.A400\n    },\n    background: {\n      default: '#fff'\n    }\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './form-input.styles.scss';\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\n  <div className=\"group\">\n    <input className=\"form-input\" onChange={handleChange} {...otherProps} />\n    {label ? (\n      <label className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\n        {label}\n      </label>\n    ) : null}\n  </div>\n);\n\nFormInput.propTypes = {\n  handleChange: PropTypes.func,\n  label: PropTypes.string\n};\n\nexport default FormInput;\n","import { createActions } from 'reduxsauce';\n\nconst { Types, Creators } = createActions({\n  googleSignIn: [],\n  emailSignIn: ['data'],\n  signInSuccess: ['currentUser'],\n  signInFailure: ['error'],\n  signOut: [],\n  signOutSuccess: [],\n  signOutFailure: ['error'],\n  signUp: ['data'],\n  signUpSuccess: [],\n  signUpFailure: ['error'],\n  checkUserSession: [],\n  purgeStore: [] // for development\n});\n\nexport { Types, Creators };\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Alert from '@material-ui/lab/Alert';\nimport Box from '@material-ui/core/Box';\n\nimport FormInput from 'components/form-input/form-input.component';\n\nimport { connect } from 'react-redux';\nimport { Creators as UserActionCreators } from 'modules/ducks/auth/auth.actions';\n\nimport './sign-in.styles.scss';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const { email, password } = this.state;\n    this.props.emailSignInAction({ email, password });\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { isFetching, error: authError } = this.props;\n\n    return (\n      <Container maxWidth=\"sm\">\n        {isFetching && <LinearProgress />}\n        <Box pt={2}>\n          <Typography variant=\"h3\" gutterBottom>\n            I-login mo email mo, beks.\n          </Typography>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Kung wala kang account, lumayas ka dito!\n          </Typography>\n        </Box>\n        {authError && (\n          <Alert style={{ marginBottom: 10 }} severity=\"error\">\n            {authError}\n          </Alert>\n        )}\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            handleChange={this.handleChange}\n            value={this.state.email}\n            label=\"email\"\n            required\n          />\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            handleChange={this.handleChange}\n            label=\"password\"\n            required\n          />\n          <div className=\"buttons\">\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              I-pasok mo!\n            </Button>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n\nSignIn.propTypes = {\n  emailSignInAction: PropTypes.func,\n  googleSignInAction: PropTypes.func\n};\n\nconst mapStateToProps = (state) => {\n  const { isFetching, error } = state.auth;\n  return { isFetching, error };\n};\n\nconst actions = {\n  emailSignInAction: UserActionCreators.emailSignIn,\n  googleSignInAction: UserActionCreators.googleSignIn\n};\n\nexport default connect(mapStateToProps, actions)(SignIn);\n","import React from 'react';\n\nimport SignIn from 'components/sign-in/sign-in.component';\n\nimport './sign-in.scss';\n\nconst SignInAndSignUpPage = () => (\n  <div className=\"sign-in-and-sign-up\">\n    <SignIn />\n  </div>\n);\n\nexport default SignInAndSignUpPage;\n","import React from 'react';\nimport Player from 'react-player';\nimport { useParams } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Alert from '@material-ui/lab/Alert';\nimport Container from '@material-ui/core/Container';\n\nconst history = createBrowserHistory();\n\nconst HomePage = () => {\n  let { channel } = useParams();\n  let [selectedChannel, setSelectedChannel] = React.useState(channel);\n  let [error, setError] = React.useState(null);\n\n  const maxNumberChannel = 99;\n\n  React.useEffect(() => {\n    console.log({ selectedChannel });\n    if (parseInt(selectedChannel) < 1) {\n      setSelectedChannel(maxNumberChannel);\n    }\n    if (parseInt(selectedChannel) > maxNumberChannel) {\n      setSelectedChannel(1);\n    }\n    history.push(`/${selectedChannel}`);\n  }, [selectedChannel]);\n\n  const nextChannel = () => {\n    channel = parseInt(selectedChannel) + 1;\n    setSelectedChannel(channel);\n    setError(null);\n  };\n\n  const prevChannel = () => {\n    channel = parseInt(selectedChannel) - 1;\n    setSelectedChannel(channel);\n    setError(null);\n  };\n\n  const handleError = () => {\n    setError('Failed to load the stream, please try other channels.');\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box my={2} style={{ textAlign: 'right' }}>\n        <Channels maxNumberChannel={maxNumberChannel} selectedChannel={selectedChannel} />\n        <IconButton onClick={() => prevChannel()}>\n          <NavigateBeforeIcon />\n        </IconButton>\n        <IconButton onClick={() => nextChannel()}>\n          <NavigateNextIcon />\n        </IconButton>\n      </Box>\n      <Box>\n        {error && (\n          <Alert style={{ marginBottom: 10 }} severity=\"error\">\n            {error}\n          </Alert>\n        )}\n        <Player\n          url={`http://195.181.160.220:2080/${selectedChannel}/video.m3u8`}\n          controls\n          onError={() => handleError()}\n          onBuffer={() => console.log('Buffering...')}\n          style={{ maxWidth: '100%', backgroundColor: 'black' }}\n        />\n      </Box>\n    </Container>\n  );\n};\n\n// eslint-disable-next-line react/prop-types\nconst Channels = ({ maxNumberChannel, selectedChannel }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const channels = [];\n  for (let ch = 1; ch <= maxNumberChannel; ch++) {\n    channels.push(ch);\n  }\n\n  return (\n    <React.Fragment>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        {`Channel ${selectedChannel}`}\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {channels.map((channel) => (\n          <MenuItem key={channel} onClick={handleClose}>\n            {channel}\n          </MenuItem>\n        ))}\n      </Menu>\n    </React.Fragment>\n  );\n};\n\nexport default HomePage;\n","import { createSelector } from 'reselect';\n\nconst selectAuth = (state) => state.auth;\n\nexport const selectCurrentUser = createSelector([selectAuth], ({ currentUser }) => currentUser);\n","/* eslint-disable react/prop-types */\n\nimport React from 'react';\nimport HomePage from './pages/home-page/home-page.component';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from './modules/ducks/auth/auth.selectors';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    },\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nconst AppContainer = ({ logoutAction, currentUser }) => {\n  const classes = useStyles();\n\n  const handleLogout = () => {\n    if (currentUser) logoutAction();\n    return;\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            TVeks\n          </Typography>\n          <Button onClick={() => handleLogout()} color=\"inherit\">\n            {currentUser ? 'Sign out' : 'Sign in'}\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      <Switch>\n        <Route path=\"/tveks/:channel\" component={HomePage} />\n      </Switch>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nexport default connect(mapStateToProps)(AppContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SignInPage from './pages/sign-in/sign-in.component';\nimport AppContainer from './app.container';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from './modules/ducks/auth/auth.selectors';\nimport { Creators } from './modules/ducks/auth/auth.actions';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.checkUserSessionAction();\n  }\n\n  handleLogout = () => {\n    // this.props.purgeStoreAction();\n    this.props.signOutAction();\n  };\n\n  render() {\n    return this.props.currentUser ? (\n      <AppContainer logoutAction={this.handleLogout} />\n    ) : (\n      <SignInPage />\n    );\n  }\n}\n\nApp.propTypes = {\n  currentUser: PropTypes.object,\n  checkUserSessionAction: PropTypes.func,\n  signOutAction: PropTypes.func,\n  purgeStoreAction: PropTypes.func\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst actions = {\n  checkUserSessionAction: Creators.checkUserSession,\n  signOutAction: Creators.signOut,\n  purgeStoreAction: Creators.purgeStore\n};\n\nexport default connect(mapStateToProps, actions)(App);\n","import { createReducer } from 'reduxsauce';\nimport { Types } from './auth.actions';\n\nconst INITIAL_STATE = {\n  currentUser: null,\n  isFetching: false,\n  error: null\n};\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.EMAIL_SIGN_IN]: (state) => {\n    return {\n      ...state,\n      isFetching: true,\n      error: null\n    };\n  },\n  [Types.SIGN_IN_SUCCESS]: (state, action) => {\n    const { currentUser } = action;\n    return {\n      ...state,\n      currentUser,\n      isFetching: false,\n      error: null\n    };\n  },\n  [Types.SIGN_OUT]: (state) => {\n    return {\n      ...state,\n      isFetching: true,\n      error: null\n    };\n  },\n  [Types.SIGN_OUT_SUCCESS]: (state) => {\n    return {\n      ...state,\n      currentUser: null,\n      isFetching: false,\n      error: null\n    };\n  },\n  [Types.SIGN_IN_FAILURE]: (state, action) => {\n    return {\n      ...state,\n      isFetching: false,\n      error: action.error\n    };\n  },\n  [Types.SIGN_OUT_FAILURE]: (state, action) => {\n    return {\n      ...state,\n      isFetching: false,\n      error: action.error\n    };\n  },\n  [Types.SIGN_UP_SUCCESS]: (state) => {\n    return {\n      ...state,\n      error: null\n    };\n  },\n  [Types.SIGN_UP_FAILURE]: (state, action) => {\n    return {\n      ...state,\n      error: action.error\n    };\n  }\n});\n","import { createActions } from 'reduxsauce';\n\nconst { Types, Creators } = createActions({\n  getHost: [],\n  getHostSuccess: ['data'],\n  getHostFailure: ['error']\n});\n\nexport { Types, Creators };\n","import { createReducer } from 'reduxsauce';\nimport { Types } from './channel.actions';\n\nconst INITIAL_STATE = {\n  host: null,\n  error: null,\n  isFetching: false\n};\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.GET_HOST]: (state) => {\n    return {\n      ...state,\n      error: null,\n      isFetching: true\n    };\n  },\n  [Types.GET_HOST_SUCCESS]: (state, action) => {\n    const { host } = action.data;\n    return {\n      ...state,\n      isFetching: false,\n      host\n    };\n  },\n  [Types.GET_HOST_FAILURE]: (state, action) => {\n    const { error } = action;\n    return {\n      ...state,\n      isFetching: false,\n      error\n    };\n  }\n});\n","import { persistCombineReducers } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport authReducer from './ducks/auth/auth.reducer';\nimport channelReducer from './ducks/channel/channel.reducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\n\nconst rootReducer = persistCombineReducers(persistConfig, {\n  auth: authReducer,\n  channel: channelReducer\n});\n\nexport default (state, action) => {\n  if (action.type === 'PURGE_STORE') {\n    console.log('store purged!');\n    storage.removeItem('persist:primary');\n    state = undefined;\n  }\n\n  return rootReducer(state, action);\n};\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: 'AIzaSyCpo_Cnun5J1tzu7WEWDi-41644e7s5WeM',\n  authDomain: 'tveks-7bd0d.firebaseapp.com',\n  databaseURL: 'https://tveks-7bd0d.firebaseio.com',\n  projectId: 'tveks-7bd0d',\n  storageBucket: 'tveks-7bd0d.appspot.com',\n  messagingSenderId: '688558364783',\n  appId: '1:688558364783:web:b427b4a5ea9e3c5830959a'\n};\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach((obj) => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n\n  return await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n  const transformedCollection = collections.docs.map((doc) => {\n    const { title, items } = doc.data();\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n","import { takeLatest, put, call } from 'redux-saga/effects';\nimport { Types, Creators } from '../ducks/auth/auth.actions';\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser\n} from '../../firebase.utils';\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(Creators.signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(Creators.signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogleRequest() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(Creators.signInFailure(error.message));\n  }\n}\n\nexport function* signInWithEmailRequest(action) {\n  const { email, password } = action.data;\n  console.log('user', email);\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    console.log('user', user);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(Creators.signInFailure(error.message));\n  }\n}\n\nexport function* checkUserSessionRequest() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(Creators.signInFailure(error));\n  }\n}\n\nexport function* signOutRequest() {\n  try {\n    yield auth.signOut();\n    yield put(Creators.signOutSuccess());\n  } catch (error) {\n    yield put(Creators.signOutFailure(error));\n  }\n}\n\nexport function* signUpRequest(action) {\n  try {\n    const { displayName, email, password } = action.data;\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user, { displayName });\n    yield put(Creators.signUpSuccess());\n  } catch (error) {\n    yield put(Creators.signUpFailure(error.message));\n  }\n}\n\nexport default function* userSagas() {\n  yield takeLatest(Types.GOOGLE_SIGN_IN, signInWithGoogleRequest);\n  yield takeLatest(Types.EMAIL_SIGN_IN, signInWithEmailRequest);\n  yield takeLatest(Types.CHECK_USER_SESSION, checkUserSessionRequest);\n  yield takeLatest(Types.SIGN_OUT, signOutRequest);\n  yield takeLatest(Types.SIGN_UP, signUpRequest);\n}\n","import { all, fork } from 'redux-saga/effects';\nimport authSagas from './auth.sagas';\n\nexport default function* rootSaga() {\n  yield all([fork(authSagas)]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './root.reducer';\n\nimport rootSaga from './sagas/root.saga';\n\nconst logger = createLogger({ collapsed: true });\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware]; // makes middlewares scalable\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\n// export default createStore(rootReducer, applyMiddleware(logger)); // for only one middleware\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n","import 'fontsource-roboto';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport App from './App';\n\nimport { store, persistor } from './modules/store';\n\nconst Component = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <PersistGate persistor={persistor}>\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <App />\n          </ThemeProvider>\n        </PersistGate>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\n// eslint-disable-next-line no-undef\nReactDOM.render(<Component />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}